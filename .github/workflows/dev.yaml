name: Publish Test

on:
  push:
    branches:
      - dev

jobs:
  publish:
    if: true
    runs-on: ubuntu-latest

    permissions:
      deployments: write
      contents: write
      statuses: write
      actions: write
      checks: read

    steps:
      - name: Checkout # Download code from the repository
        uses: actions/checkout@v2 # Public action
        with:
          fetch-depth: 0 # Checkout all branches and tags

      - name: 'Use NodeJS 16' # Setup node using version 14
        uses: actions/setup-node@v2 # Public action
        with:
          node-version: '16.18.1'

      - name: Setup lerna@6.6.1
        run: yarn global add lerna@6.6.1 --ignore-engines

      - name: Set up Git user
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Build dependencies
        run: |
          lerna clean --yes
          node etc/bootstrapEnv
          yarn install --ignore-engines
          yarn build

      - name: Checkout shane-moore/chainlist repository
        uses: actions/checkout@v2
        with:
          repository: 'shane-moore/chainlist'
          ref: 'main'
          token: ${{ secrets.GH_TOKEN }}
          path: 'chainlist'

      - name: Create new branch for assets update
        run: |
          cd chainlist
          git checkout -b update-assets-${{ github.run_id }}

      - name: Replace assets.json with automated-assets.json
        run: |
          cp ../packages/sdk-ui-ts/src/services/cosmostation-tokens/automated-assets.json ./chain/injective/assets.json

      - name: Commit and push changes
        run: |
          cd chainlist
          git add chain/injective/assets.json
          git commit -m "Automated update of assets.json"
          git push -u origin update-assets-${{ github.run_id }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Create pull request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          commit-message: "Automated update of assets.json"
          title: "Automate update of assets.json"
          branch: "update-assets-${{ github.run_id }}"
          base: "main" # The branch you want to merge into on your fork
          body: "This PR updates the assets.json with new token metadata"
          labels: "automated-pr"
          reviewers: "shane-moore" # Replace with actual reviewer(s) if necessary
          working-directory: ./chainlist

      # - name: Setup npm
      #   run: |
      #     echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
      #     npm whoami
      #   env:
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: 'Commit ibcTokenMetadata.json if changed'
      #   run: |
      #     git diff --exit-code -- packages/sdk-ui-ts/src/services/ibc/ibcTokenMetadata.json || (git add packages/sdk-ui-ts/src/services/ibc/ibcTokenMetadata.json && git commit -m "Automatically update ibcTokenMetadata.json")

      # - name: Version and publish
      #   run: |
      #     lerna version prerelease --preid beta --force-git-tag --no-changelog --yes
      #     lerna publish from-git --force-git-tag --dist-tag next --yes --summary-file
      #   env:
      #     GH_TOKEN: ${{ secrets.GH_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      # - name: Broadcast published versions on Slack
      #   run: node etc/slack --api=$SLACK_API --actor=$GIT_ACTOR --commit-message=$GIT_LATEST_COMMIT_MESSAGE
      #   env:
      #     GIT_ACTOR: ${{ github.actor }}
      #     SLACK_API: ${{ secrets.SLACK_API }}
      #     GIT_LATEST_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
